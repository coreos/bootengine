#!/bin/bash
# -*- mode: shell-script; indent-tabs-mode: nil; sh-basic-offset: 4; -*-
# ex: ts=8 sw=4 sts=4 et filetype=sh

set -e

UNIT_DIR="${1:-/tmp}"

# Usage: cmdline_arg name default_value
cmdline=( $(</proc/cmdline) )
cmdline_arg() {
    local name="$1" value="$2"
    for arg in "${cmdline[@]}"; do
        if [[ "${arg%%=*}" == "${name}" ]]; then
            value="${arg#*=}"
        fi
    done
    echo "${value}"
}

add_requires() {
    local name="$1"
    local requires_dir="${UNIT_DIR}/basic.target.requires"
    mkdir -p "${requires_dir}"
    ln -sf "../${name}" "${requires_dir}/${name}"
}

root=$(cmdline_arg root)
rootmkfs=$(cmdline_arg rootmkfs)
rootmkfstype=$(cmdline_arg rootmkfstype btrfs)
rootmkfsflags=$(cmdline_arg rootmkfsflags "-m single -l 32768 -n 32768 -L ROOT")

if [[ ${rootmkfs} == "" ]]; then
    exit 0
fi

if [[ ${root} == "" ]]; then
    echo "the kernel option 'root' must be specified along with rootmkfs."
    exit 1
fi

add_requires root-mkfs.service
cat >"${UNIT_DIR}/root-mkfs.service" <<EOF
# Automatically generated by root-mkfs

[Unit]
DefaultDependencies=no

[Service]
Type=oneshot
RemainAfterExit=yes
Environment="FLAGS=${rootmkfsflags}"
ExecStart=/usr/lib/systemd/root-mkfs ${root} ${rootmkfs} ${rootmkfstype} \${FLAGS}
EOF
